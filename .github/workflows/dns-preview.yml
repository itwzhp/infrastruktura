name: Preview DNS changes

on:
  workflow_run:
    workflows: ["Build DNS config"]
    types: [ completed ]

# based on https://securitylab.github.com/research/github-actions-preventing-pwn-requests/

jobs:
  dnscontrol:
    name: DNSControl
    runs-on: ubuntu-latest
    if: >
      ${{ github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success' }}
    container:
      image: stackexchange/dnscontrol:v3.11.0
    steps:
      - uses: actions/checkout@v2

      - name: Download built DNS config
        uses: actions/github-script@v3
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id}},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "dns-config"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.mkdirSync('${{github.workspace}}', { recursive: true } );
            fs.writeFileSync('${{github.workspace}}/dns-config.zip', Buffer.from(download.data));

      - name: Generate DNS changes
        id: dnscontrol_preview
        run: |
            unzip ${{github.workspace}}/dns-config.zip -q

            # This is github environment file output: https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#environment-files
            echo 'dnscontrol_output<<EOF' >> $GITHUB_ENV
            dnscontrol preview --config domains/dnsconfig.js --creds domains/creds.json --ir dns-config.json | head -n 250 >> $GITHUB_ENV
            echo 'EOF' >> $GITHUB_ENV
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          AZURE_DNS_MANAGEMENT_CREDENTIALS: ${{ secrets.AZURE_DNS_MANAGEMENT_CREDENTIALS }}
          OVH_APP_SECRET_KEY: ${{ secrets.OVH_APP_SECRET_KEY }}
          OVH_CONSUMER_KEY: ${{ secrets.OVH_CONSUMER_KEY }}

      - name: Add comment to the pull request
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            var fs = require('fs');
            var issue_number = Number(fs.readFileSync('pr-number'));

            github.issues.createComment({
              issue_number: issue_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `
              \`\`\`
              ${{ env.dnscontrol_output }}
              \`\`\`
              `
            })
